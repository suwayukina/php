# どんなコンテナを立ち上げるか
services:

 # ---------------------------------
 # laravelを動かすコンテナ
 # ---------------------------------
 app_laravel_project:
   # どのポートを開いて繋ぐか。下記はコンテナの80番ポートを開いて、ホストの80番につなぐ
   ports:
     - "7008:80"
   # 先ほど作ったDockerfileを使って、コンテナをビルドするという指定
   build: ./docker/app
   # コンテナの名前を指定
   container_name: laravel_app
   # ローカルのディレクトリとコンテナ上のディレクトリのリンクを設定
   # ./src は docker-composer.yml のディレクトリ直下にある src を設定している
   # コンテナが作成されると src ディレクトリからコンテナの /var/www/html にアクセスすることができる
   volumes:
     - ./html:/var/www/html

# ----------------------------------
# MySQLを動かすコンテナ
# ----------------------------------
 db_laravel_project:
   # Docker HubからMySQL5.7の公式イメージをダウンロードしてくる指定
   image: mysql:5.7
   container_name: db-host

   # コンテナ内の環境変数を指定。環境変数を渡すとビルド時に設定してくれるDockerイメージがあるので、利用の際はDocker Hubのサイトで確認する
   environment:
     MYSQL_ROOT_HOST: '%'
     MYSQL_ROOT_PASSWORD: root
     MYSQL_DATABASE: laravel_db
     MYSQL_USER: laravel_user
     MYSQL_PASSWORD: laravel_pass
     TZ: 'Asia/Tokyo'

   # 起動時のコマンド
   command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
   # ディレクトリ同期。設定ファイルとMySQLのデータが保存される場所を同期している。コンテナは基本的に起動時に変更されてもコンテナ自体が止まるとデータが消えてしまうため、保存しておきたいものはホストマシンと同期しておく必要がある。
   volumes:
     - ./docker/db/data:/var/lib/mysql
     - ./docker/db/my.cnf:/etc/mysql/conf.d/my.cnf
   # ポートが被らないように3306以外の数字を使う
   ports:
     - 14406:3306
   # 3306以外の数字を使う場合、起動時にコマンドが必要となる
   command: --port 14406 

# ----------------------------------
# phpmyadminを動かすコンテナ
# ----------------------------------
 phpmyadmin_laravel_project:
   image: phpmyadmin/phpmyadmin
   # コンテナの名前を指定
   container_name: laravel_phpmyadmin
   volumes:
     - ./phpmyadmin/sessions:/sessions
   ports:
     - 4501:80
   environment:
     - PMA_ARBITRARY=1
     # 3306以外の数字を使う場合、ポート指定を行う
     - PMA_HOST=db-host:14406
     - PMA_USER=root
     - PMA_PASSWORD=root
